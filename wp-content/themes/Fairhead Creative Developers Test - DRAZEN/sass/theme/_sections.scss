//section definitions




section,
header,
footer {
  background: $dark-gray;
  @include clearfix();
  margin: 0;
  overflow: hidden;
  
  .section-icon {
    @include position(absolute, null 20px 0 null);
    width: 150px;
    height: 150px;
    z-index: 1;
    transform: rotate(30deg);
    opacity: .08;
    pointer-events: none;
    transition: all .3s;
    
    svg {
      width: 100%;
      height: 100%;
    }
  }
  
  &:hover {
    
    .section-icon {
      opacity: .25;
    }
  }
}

body > section,
body > header {  
  padding: 0 0 3em;
}

.hero {
  color: $white;
  
  .section-icon {
    top: 60%;
    left: 50%;
    right: auto;
    bottom: auto;
    transform: rotate(0deg) translate(-50%, -50%);
    width: 700px;
    height: 700px;
  }
  
  h1, p {
    position: relative;
    z-index: 2;
    
    &:nth-last-child(2) {
      z-index: 0;
    }
  }
}

.hero-home {
  color: $white;
  
  .section-icon {
    top: 50%;
    left: 50%;
    right: auto;
    bottom: auto;
    transform: rotate(0deg) translate(-50%, -50%);
    width: 600px;
    height: 600px;
  }
  
  h1, p {
    position: relative;
    z-index: 2;
    
    &:nth-last-child(2) {
      z-index: 0;
    }
  }
}
/*button margin for mobile*/
@media screen and (max-width: 375px)  {

.button {
    
    margin-top: 1em;
}}

.content-css {
  
  .container,
  .content-container {
    border-bottom: 16px solid $bg-css;   
  }
  
  article {
    @include span-columns(4);
    text-align: center;
	

    
    &:nth-child(4) {
      @include omega();
    }
    
    ol {
      text-align: left;
    }
	/*responsive layout*/
	  @include media(min-width 320px max-width 780px, 6) {
    @include span-columns(6);
  }
	
	
  }
}
/*Paragraph CSS change- firefox issue*/
@media screen and (min-width: 720px)  {
.content-js p {
    max-width: 372px !important;
    }
}
.content-js {
  text-align: center;
  
  .container,
  .content-container {
    border-bottom: 16px solid $bg-css;  
      
    svg {
      transform: scale(0.8) translate(-10px, -20px);
    }
    
    .tertis-block a {
      height: 60px;
      width: 56px;
      background: $red;
      position: absolute;
      left: calc(50% - 28px);
      color: $white;
      font-size: 2em;
      
      &:hover {
        background: lighten($red, 15);
      }
    }
    
    .tetris-row {
      float: left;
      width: 100%;
      margin-top: 26em;
      
      .tetris-block {
        height: 60px;
        width: 56px;
        float: left;
        background: $red;
        margin-right: 19px;
        
        &:nth-child(n+8) {
          float: right;
        }
        
        &:nth-child(8) {
          margin-right: 0;
        }
		/*mobile-view*/
		  @include media(min-width 320px max-width 480px, 6) {
    @include span-columns(6);
  }
      }
	  
	  
	  

}
	  /*mobile & tablet view*/
@media screen and (max-width: 1195px)  {


	  
	  .tetris-block {
        height: 4em;
    width: 4em;
    float: left;
    background: #E54B4B;
    
    margin-bottom: 10px;
        
        &:nth-child(n+8) {
           float: left !important;
        }
		
		&:nth-child(8) {
          margin-right: 19px !important;
        }
		
		 
	}




}
	  
	  
	  
    
  }
}

/*Targeting Firefox*/
@-moz-document url-prefix() { 
.content-php .content-container ol {
   
    max-width: 590px !important;
}}

.content-php {
  
  .container,
  .content-container {
    border-bottom: 16px solid $bg-css;  
      
    svg {
      transform: scale(2.5) translate(-5px, -4px);
    }
    
    ol {
      margin: 1em auto;
      max-width: 560px;
    }
    
    form {
      margin: 1em auto;
      max-width: 560px;
      padding: 2em;
      background: #efefef;
      border-radius: 5px;
      overflow: auto;
      
      input[type="checkbox"] {
        float: left;
        line-height: 2;
        margin-top: 12px;
      }
      
      label {
        float: left;
        margin-right: .25em;
        font-size: 22px;
        clear: both;
        font-weight: 400;
        letter-spacing: .75px;
      }
      
      input[type="submit"] {
        float: right;
        clear: both;
      }
    }
  }
}

footer {
  text-align: center;
  color: $white;
  margin-top: -5.5em;
}

.overlay-test {

  display: none;
  
  &.is-active {
    display: block;
	  
  }
  
 
}


/*modal css
Credits:https://codepen.io/designcouch/pen/obvKxm
*/



#modal-container {
  position:fixed;
  display:table;
  height:100%;
  width:100%;
  top:0;
  left:0;
  transform:scale(0);
  z-index:1;
  &.one {
    transform:scaleY(.01) scaleX(0);
    animation:unfoldIn 1s cubic-bezier(0.165, 0.840, 0.440, 1.000) forwards;
    .modal-background {
      .modal {
        transform:scale(0);
        animation: zoomIn .5s .8s cubic-bezier(0.165, 0.840, 0.440, 1.000) forwards;
      }
    }
    &.out {
      transform:scale(1);
      animation:unfoldOut 1s .3s cubic-bezier(0.165, 0.840, 0.440, 1.000) forwards;
      .modal-background {
        .modal {
          animation: zoomOut .5s cubic-bezier(0.165, 0.840, 0.440, 1.000) forwards;
        }
      }
    }
  }

 
 
 
  }
  
  .modal-background {
    display:table-cell;
    background:rgba(0,0,0,.8);
    text-align:center;
    vertical-align:middle;
    .modal {
      background:white;
      padding:50px;
      display:inline-block;
      border-radius:3px;
      font-weight:300;
      position:relative;
      h2 {
        font-size:25px;
        line-height:25px;
        margin-bottom:15px;
      }
      p {
        font-size:18px;
        line-height:22px;
      }
      .modal-svg {
        position:absolute;
        top:0;
        left:0;
        height:100%;
        width:100%;
        border-radius:3px;
        rect {
          stroke: #fff;
          stroke-width: 2px;
          stroke-dasharray: 778;
          stroke-dashoffset: 778;
        }
      }
    }
  }


.content {
  min-height:100%;
  height:100%;
  background:white;
  position:relative;
  z-index:0;
  h1 {
    padding:75px 0 30px 0;
    text-align:center;
    font-size:30px;
    line-height:30px;
  }
  
}

@keyframes unfoldIn {
  0% {
    transform:scaleY(.005) scaleX(0);
  }
  50% {
    transform:scaleY(.005) scaleX(1);
  }
  100% {
    transform:scaleY(1) scaleX(1);
  }
}

@keyframes unfoldOut {
  0% {
    transform:scaleY(1) scaleX(1);
  }
  50% {
    transform:scaleY(.005) scaleX(1);
  }
  100% {
    transform:scaleY(.005) scaleX(0);
  }
}


@keyframes zoomIn {
  0% {
    transform:scale(0);
  }
  100% {
    transform:scale(1);
  }
}

@keyframes zoomOut {
  0% {
    transform:scale(1);
  }
  100% {
    transform:scale(0);
  }
}


